ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
facet_wrap(~state, ncol=3,scales = "free_y")
ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
#kui rows asemel anda columns=... siis teeb veeru iga osariigi kohta
#selle võib asendada ka facet_grid(.~ state) või facet_grid(state ~.)
facet_grid(rows = vars(state))
data(mpg)#laeme Ris olemasoleva andmehulga
ggplot(mpg, aes(displ, cty)) +
geom_point()+
facet_grid(drv ~ cyl)+
ggtitle("drv vs cyl")
#funktsioon usaldusintervallide arvutamiseks, laenatud siit http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
us_state_populations_se <- summarySE(us_state_populations, measurevar="population_thousand", groupvars=c("year"))
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
#geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
geom_line() +
geom_point()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
geom_line() +
geom_point()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se), width=.1) +
geom_line() +
geom_point()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),color="red", width=.1) +
geom_line() +
geom_point()+
theme_minimal()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),color="red", width=.1) +
geom_line(fill="blue") +
geom_point()+
theme_minimal()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),color="red", width=.1) +
geom_line(color="blue") +
geom_point()+
theme_minimal()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="grey")+
theme_minimal()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="grey")+
ggtitle("Keskmine populatsioon koos standardveaga")
theme_minimal()
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="grey")+
ggtitle("Keskmine populatsioon koos standardveaga")+
#x-telje pealkiri
xlab("aasta")+
#y-telje pealkiri
ylab("populatsioon")+
theme(
plot.title = element_text(color="red", size=14, face="bold.italic"),
axis.title.x = element_text(color="blue", size=14, face="bold"),
axis.title.y = element_text(color="#993333", size=14, face="bold"))
ggplot(us_state_populations, aes(x=population_thousand))+
geom_density(color="black", fill="lightblue", linetype="dashed")+
theme_light()
ggsave("myplot.png")
#laeme andmed
us_state_populations<-read.csv("data/introductory_state_example.csv")
us_state_populations$population_thousand=us_state_populations$population/1000
plot(us_state_populations$year,us_state_populations$population_thousand, main="Scatterplot of year vs population")
hist(us_state_populations$population_thousand, main="Histogram of population")
boxplot(us_state_populations$population_thousand, main="Boxplot of population")
library(lattice)
#võtame ühe Riga kaasas olnud andmed külge
attach(mtcars)
# muudame muutujad faktoriteks
# create factors with value labels
gear.f<-factor(gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
cyl.f <-factor(cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# kernel density plot
densityplot(~mpg,
main="Density Plot",
xlab="Miles per Gallon")
#laeme andmed
us_state_populations<-read.csv("data/introductory_state_example.csv")
us_state_populations$population_thousand=us_state_populations$population/1000
plot(us_state_populations$year,us_state_populations$population_thousand, main="Scatterplot of year vs population")
hist(us_state_populations$population_thousand, main="Histogram of population")
boxplot(us_state_populations$population_thousand, main="Boxplot of population")
library(lattice)
#võtame ühe Riga kaasas olnud andmed külge
attach(mtcars)
# muudame muutujad faktoriteks
# create factors with value labels
gear.f<-factor(gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
cyl.f <-factor(cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
# kernel density plot
densityplot(~mpg,
main="Density Plot",
xlab="Miles per Gallon")
# kernel density plots by factor level
densityplot(~mpg|cyl.f,
main="Density Plot by Number of Cylinders",
xlab="Miles per Gallon")
library(tidyverse)
#qplot on kiire viis kuidas saada vaikeväärtustega graafik
qplot(x = year, y = population_thousand, main="Population distribution", data = us_state_populations, geom = "point")
#esimene argument on andmeraam, kõik muutujad, mis tulevad andmetest peab olema aes(...) sees
plt=ggplot(us_state_populations, aes(year, population_thousand))+
#lisame geom kihi, antud juhul tahame punkte
geom_point()+
ggtitle("Population distribution")
plt
plt+geom_smooth()+
theme_classic()
#võtame ühe osariigi
df_ohio=us_state_populations[us_state_populations$state=="Ohio",]
#plotime
ggplot(df_ohio, aes(year, population_thousand))+
geom_line()+
ggtitle("Population of Ohio")
df_ohio_alabama=us_state_populations[us_state_populations$state %in% c('Ohio', 'Alabama'),]
ggplot(df_ohio_alabama, aes(year, population_thousand))+
geom_line(aes(group=state, color=state))+
ggtitle("Population of Ohio and Alabama")
ggplot(df_ohio_alabama, aes(year, population_thousand))+
#stat=identity määra, et näitab muutuja tegelikku väärtust, mitte counti
#position_dodge() tõstab tulbad, üksteise kõrvale
geom_bar(stat='identity', aes(fill=state), position=position_dodge())+
ggtitle("Population of Ohio and Alabama")+
theme_minimal()
ggplot(df_ohio_alabama, aes(year, population_thousand))+
#stat=identity määra, et näitab muutuja tegelikku väärtust, mitte counti
#alpha määrab läbipaistvuse
geom_bar(stat='identity', aes(fill=state), alpha=0.5)+
ggtitle("Population of Ohio and Alabama")+
theme_minimal()
ggplot(us_state_populations, aes(year, population_thousand, group=year))+
geom_boxplot(fill='lightgreen', color='blue')+
ggtitle("Distribution of population")+
theme_minimal()
ggplot(us_state_populations, aes(x=population_thousand))+
geom_histogram(color="black", fill="lightblue", linetype="dashed")+
theme_light()
ggplot(us_state_populations, aes(x=population_thousand))+
geom_density(color="black", fill="lightblue", linetype="dashed")+
theme_light()
alaska_alabama_california=us_state_populations[us_state_populations$state %in%
c("Alaska", "Alabama", "California"), ]
ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
facet_wrap(~state, ncol=3,scales = "free_y")
ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
#kui rows asemel anda columns=... siis teeb veeru iga osariigi kohta
#selle võib asendada ka facet_grid(.~ state) või facet_grid(state ~.)
facet_grid(rows = vars(state))
data(mpg)#laeme Ris olemasoleva andmehulga
ggplot(mpg, aes(displ, cty)) +
geom_point()+
facet_grid(drv ~ cyl)+
ggtitle("drv vs cyl")
#funktsioon usaldusintervallide arvutamiseks, laenatud siit http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
us_state_populations_se <- summarySE(us_state_populations, measurevar="population_thousand", groupvars=c("year"))
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="green")+
ggtitle("Keskmine populatsioon koos standardveaga")+
#x-telje pealkiri
xlab("aasta")+
#y-telje pealkiri
ylab("populatsioon (tuhandetes)")+
#lisame teksti graafikule
annotate("text", x = 1925, y = 3000, label = "Mingi tekst")+
#lisame märgistatud ala
annotate("rect", xmin = 1910, xmax = 1940, ymin = 2000, ymax = 4000, alpha = .2)+
theme(
#pealkirja muutmine
plot.title = element_text(color="red", size=14, face="bold.italic"),
#x-telje pealkirja muutmine
axis.title.x = element_text(color="blue", size=14, face="bold"),
#ytelje pealkirja muutmine
axis.title.y = element_text(color="#993333", size=14, face="bold"),
#x-telje elementide tekst
axis.text.x = element_text(face="bold", color="#993333", size=10, angle=45),
#y-telje elementide tekst
axis.text.y = element_text(face="bold", color="#993333", size=10, angle=45),
#tausta muutmine
panel.background = element_rect(fill = "lightblue",colour = "lightblue",
size = 0.5, linetype = "solid"),
#peamine ruudustiku muutmine
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
#väikese ruudustiku muutmine
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"))
ggplot(mtcars, aes(mpg, wt)) +
geom_point() +
xlim(15, 20)
p <- ggplot(mtcars, aes(disp, wt)) +
geom_point() +
geom_smooth()
p
p <- ggplot(mtcars, aes(disp, wt)) +
geom_point() +
geom_smooth()
p
p+xlim(200,350)
p + coord_cartesian(xlim = c(325, 500))
p + coord_cartesian(xlim = c(200, 350))
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="green")+
#lisame igale punktile ka selle väärtuse
geom_text(aes(label=round(population_thousand,0)),hjust=0, vjust=0)+
ggtitle("Keskmine populatsioon koos standardveaga")+
#x-telje pealkiri
xlab("aasta")+
#y-telje pealkiri
ylab("populatsioon (tuhandetes)")+
#lisame teksti graafikule
annotate("text", x = 1925, y = 3000, label = "Mingi tekst")+
#lisame märgistatud ala
annotate("rect", xmin = 1910, xmax = 1940, ymin = 2000, ymax = 4000, alpha = .2)+
theme(
#pealkirja muutmine
plot.title = element_text(color="red", size=14, face="bold.italic"),
#x-telje pealkirja muutmine
axis.title.x = element_text(color="blue", size=14, face="bold"),
#ytelje pealkirja muutmine
axis.title.y = element_text(color="#993333", size=14, face="bold"),
#x-telje elementide tekst
axis.text.x = element_text(face="bold", color="#993333", size=10, angle=45),
#y-telje elementide tekst
axis.text.y = element_text(face="bold", color="#993333", size=10, angle=45),
#tausta muutmine
panel.background = element_rect(fill = "lightblue",colour = "lightblue",
size = 0.5, linetype = "solid"),
#peamine ruudustiku muutmine
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
#väikese ruudustiku muutmine
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"))
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="green")+
#lisame igale punktile ka selle väärtuse
geom_text(aes(label=round(population_thousand,0)),hjust=0, vjust=10)+
ggtitle("Keskmine populatsioon koos standardveaga")+
#x-telje pealkiri
xlab("aasta")+
#y-telje pealkiri
ylab("populatsioon (tuhandetes)")+
#lisame teksti graafikule
annotate("text", x = 1925, y = 3000, label = "Mingi tekst")+
#lisame märgistatud ala
annotate("rect", xmin = 1910, xmax = 1940, ymin = 2000, ymax = 4000, alpha = .2)+
theme(
#pealkirja muutmine
plot.title = element_text(color="red", size=14, face="bold.italic"),
#x-telje pealkirja muutmine
axis.title.x = element_text(color="blue", size=14, face="bold"),
#ytelje pealkirja muutmine
axis.title.y = element_text(color="#993333", size=14, face="bold"),
#x-telje elementide tekst
axis.text.x = element_text(face="bold", color="#993333", size=10, angle=45),
#y-telje elementide tekst
axis.text.y = element_text(face="bold", color="#993333", size=10, angle=45),
#tausta muutmine
panel.background = element_rect(fill = "lightblue",colour = "lightblue",
size = 0.5, linetype = "solid"),
#peamine ruudustiku muutmine
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
#väikese ruudustiku muutmine
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"))
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="green")+
#lisame igale punktile ka selle väärtuse
geom_text(aes(label=round(population_thousand,0)),hjust=0, vjust=2)+
ggtitle("Keskmine populatsioon koos standardveaga")+
#x-telje pealkiri
xlab("aasta")+
#y-telje pealkiri
ylab("populatsioon (tuhandetes)")+
#lisame teksti graafikule
annotate("text", x = 1925, y = 3000, label = "Mingi tekst")+
#lisame märgistatud ala
annotate("rect", xmin = 1910, xmax = 1940, ymin = 2000, ymax = 4000, alpha = .2)+
theme(
#pealkirja muutmine
plot.title = element_text(color="red", size=14, face="bold.italic"),
#x-telje pealkirja muutmine
axis.title.x = element_text(color="blue", size=14, face="bold"),
#ytelje pealkirja muutmine
axis.title.y = element_text(color="#993333", size=14, face="bold"),
#x-telje elementide tekst
axis.text.x = element_text(face="bold", color="#993333", size=10, angle=45),
#y-telje elementide tekst
axis.text.y = element_text(face="bold", color="#993333", size=10, angle=45),
#tausta muutmine
panel.background = element_rect(fill = "lightblue",colour = "lightblue",
size = 0.5, linetype = "solid"),
#peamine ruudustiku muutmine
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
#väikese ruudustiku muutmine
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"))
ggplot(us_state_populations_se, aes(x=year, y=population_thousand)) +
geom_errorbar(aes(ymin=population_thousand-se, ymax=population_thousand+se),
color="red", width=.1) +
geom_line(color="blue") +
geom_point(color="green")+
#lisame igale punktile ka selle väärtuse
geom_text(aes(label=round(population_thousand,0)),hjust=0, vjust=0.5)+
ggtitle("Keskmine populatsioon koos standardveaga")+
#x-telje pealkiri
xlab("aasta")+
#y-telje pealkiri
ylab("populatsioon (tuhandetes)")+
#lisame teksti graafikule
annotate("text", x = 1925, y = 3000, label = "Mingi tekst")+
#lisame märgistatud ala
annotate("rect", xmin = 1910, xmax = 1940, ymin = 2000, ymax = 4000, alpha = .2)+
theme(
#pealkirja muutmine
plot.title = element_text(color="red", size=14, face="bold.italic"),
#x-telje pealkirja muutmine
axis.title.x = element_text(color="blue", size=14, face="bold"),
#ytelje pealkirja muutmine
axis.title.y = element_text(color="#993333", size=14, face="bold"),
#x-telje elementide tekst
axis.text.x = element_text(face="bold", color="#993333", size=10, angle=45),
#y-telje elementide tekst
axis.text.y = element_text(face="bold", color="#993333", size=10, angle=45),
#tausta muutmine
panel.background = element_rect(fill = "lightblue",colour = "lightblue",
size = 0.5, linetype = "solid"),
#peamine ruudustiku muutmine
panel.grid.major = element_line(size = 0.5, linetype = 'solid',
colour = "white"),
#väikese ruudustiku muutmine
panel.grid.minor = element_line(size = 0.25, linetype = 'solid',
colour = "white"))
#geom smooth lisab trendijoone (tehes mudeli võimaliku trendi kohta)
plt+geom_smooth()+
geom_smooth(method=lm)+
theme_classic()
#geom smooth lisab trendijoone (tehes mudeli võimaliku trendi kohta)
plt+geom_smooth()+
geom_smooth(method=lm, color='green')+
theme_classic()
#geom smooth lisab trendijoone (tehes mudeli võimaliku trendi kohta)
plt+geom_smooth()+
geom_smooth(method=lm, color='lightgreen')+
theme_classic()
df_ohio_alabama=us_state_populations[us_state_populations$state %in% c('Ohio', 'Alabama'),]
ggplot(df_ohio_alabama, aes(year, population_thousand))+
geom_line(aes(group=state, color=state))+
ggtitle("Population of Ohio and Alabama")+
theme_minimal()
#võtame ühe osariigi
df_ohio=us_state_populations[us_state_populations$state=="Ohio",]
#plotime
ggplot(df_ohio, aes(year, population_thousand))+
geom_line()+
ggtitle("Population of Ohio")+
theme_minimal()
#esimene argument on andmeraam, kõik muutujad, mis tulevad andmetest peab olema aes(...) sees
plt=ggplot(us_state_populations, aes(year, population_thousand))+
#lisame geom kihi, antud juhul tahame punkte
geom_point()+
ggtitle("Population distribution")+
theme_minimal()
plt
alaska_alabama_california=us_state_populations[us_state_populations$state %in%
c("Alaska", "Alabama", "California"), ]
ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
facet_wrap(~state, ncol=3,scales = "free_y")+
theme_minila()
alaska_alabama_california=us_state_populations[us_state_populations$state %in%
c("Alaska", "Alabama", "California"), ]
ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
facet_wrap(~state, ncol=3,scales = "free_y")+
theme_minimal()
ggplot(alaska_alabama_california, aes(x=year, y=population_thousand))+
geom_point()+
#kui rows asemel anda columns=... siis teeb veeru iga osariigi kohta
#selle võib asendada ka facet_grid(.~ state) või facet_grid(state ~.)
facet_grid(rows = vars(state))+
theme_minimal()
data(mpg)#laeme Ris olemasoleva andmehulga
ggplot(mpg, aes(displ, cty)) +
geom_point()+
facet_grid(drv ~ cyl)+
ggtitle("drv vs cyl")+
theme_minimal()
plt=ggplot(us_state_populations, aes(year, population_thousand))+
#lisame geom kihi, antud juhul tahame punkte
geom_point()+
#ajab punktid juhuslikkusega laiali
geom_jitter()+
ggtitle("Population distribution")+
theme_minimal()
ggplot(us_state_populations, aes(year, population_thousand))+
#lisame geom kihi, antud juhul tahame punkte
geom_point()+
#ajab punktid juhuslikkusega laiali
geom_jitter()+
ggtitle("Population distribution")+
theme_minimal()
ggplot(us_state_populations, aes(year, population_thousand))+
#lisame geom kihi, antud juhul tahame punkte
geom_point(alpha=0.5, color="blue")+
#ajab punktid juhuslikkusega laiali
geom_jitter()+
ggtitle("Population distribution")+
theme_minimal()
ggplot(us_state_populations, aes(year, population_thousand))+
#lisame geom kihi, antud juhul tahame punkte
#geom_point()+
#ajab punktid juhuslikkusega laiali
geom_jitter(alpha=0.5, color="blue")+
ggtitle("Population distribution")+
theme_minimal()
ggplot(us_state_populations, aes(year, population_thousand))+
#ajab punktid juhuslikkusega laiali
geom_jitter(alpha=0.3, color="blue")+
ggtitle("Population distribution")+
theme_minimal()
