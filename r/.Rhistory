# Create matrix of normal random numbers
mymat <- replicate(m, rnorm(n))
# Transform into data frame
mydframe <- data.frame(mymat)
for (i in 1:m) {
for (j in 1:n) {
mydframe[i,j]<-mydframe[i,j] + 10*sin(0.75*pi)
print(mydframe)
}
}
# This is a bad loop with 'growing' data
set.seed(42)
m=10
n=10
# Create matrix of normal random numbers
mymat <- replicate(m, rnorm(n))
# Transform into data frame
mydframe <- data.frame(mymat)
for (i in 1:m) {
for (j in 1:n) {
mydframe[i,j]<-mydframe[i,j] + 10*sin(0.75*pi)
#print(mydframe)
}
}
mydframe
set.seed(42)
m=10
n=10
mymat <- replicate(m, rnorm(n))
mydframe <- data.frame(mymat)
mydframe <- mydframe + 10*sin(0.75*pi)
mydframe
#halb näide, aeglane
system.time(
set.seed(42) #seab juhuslikkuse
m=10
#halb näide, aeglane
set.seed(42)
system.time(
#seab juhuslikkuse
m=10
n=10
#halb näide, aeglane
set.seed(42)
#seab juhuslikkuse
m=10
n=10
# Create matrix of normal random numbers
mymat <- replicate(m, rnorm(n))
# Transform into data frame
mydframe <- data.frame(mymat)
for (i in 1:m) {
for (j in 1:n) {
mydframe[i,j]<-mydframe[i,j] + 10*sin(0.75*pi)
#print(mydframe)
}
}
mydframe
vec1=c(1,2,3)
vec2=c(10,20, 30)
vec1+vec2
#halb näide, aeglane
algusaeg <- proc.time()
set.seed(42)
#seab juhuslikkuse
m=10
n=10
# Create matrix of normal random numbers
mymat <- replicate(m, rnorm(n))
# Transform into data frame
mydframe <- data.frame(mymat)
for (i in 1:m) {
for (j in 1:n) {
mydframe[i,j]<-mydframe[i,j] + 10*sin(0.75*pi)
#print(mydframe)
}
}
proc.time()-algusaeg
mydframe
#halb näide, aeglane
algusaeg <- proc.time()
set.seed(42)
#seab juhuslikkuse
m=10
n=10
# Create matrix of normal random numbers
mymat <- replicate(m, rnorm(n))
# Transform into data frame
mydframe <- data.frame(mymat)
for (i in 1:m) {
for (j in 1:n) {
mydframe[i,j]<-mydframe[i,j] + 10*sin(0.75*pi)
#print(mydframe)
}
}
print(proc.time()-algusaeg)
mydframe
install.packages("ggplot2")
#kaustame
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
#kaustame
library(ggplot2)
library("devtools")
install.packages("devtools")
library("devtools")
library("devtools")
#vaja on linki paketile
install_github("https://github.com/RRisto/riigiteenused")
install.packages("Rtools")
install.packages("rtools")
states=read.csv('data/states.csv')
states=read.csv('data/states.csv')
dim(states)
states=read.csv('data/states.csv')
dim(states)
head(states)
tail(states)
?read.csv
summary(states)
install.packages("tidyverse")
library(readxl)
hdi=read_excel("data/HDIdat.xls")
library(readxl)
hdi=read_excel("data/HDIdat.xls.xlsx")
head(hdi)
head(hdi, 20)
hdi=read_excel("data/HDIdat.xls.xlsx", skip = 20)
head(hdi)
hdi=read_excel("data/HDIdat.xls.xlsx", skip = 19)
head(hdi)
tail(hdi)
tail(hdi_orig,10)
hdi_orig=read_excel("data/HDIdat.xls.xlsx", skip = 19)
head(hdi_orig)
tail(hdi_orig,10)
hdi=hdi_orig[1:]
tail(hdi_orig,15)
hdi=hdi_orig[1:-12,]
nrwo(hdi_orig)
nrow(hdi_orig)
hdi=hdi_orig[,]
states=read.csv('data/states.csv')
class(states)
dim(states)
nrow(hdi_orig)
hdi=hdi_orig[-c((nrow(hdi_orig-10):nrow(hdi_orig)),]
nrow(hdi_orig)
hdi=hdi_orig[-c((nrow(hdi_orig-10):nrow(hdi_orig))]
nrow(hdi_orig)
hdi=hdi_orig[-c((nrow(hdi_orig-10):nrow(hdi_orig))
tail(hdi)
nrow(hdi_orig)
hdi=hdi_orig[-c((nrow(hdi_orig-10):nrow(hdi_orig))),]
-c((nrow(hdi_orig-10):nrow(hdi_orig)))
c((nrow(hdi_orig-10):nrow(hdi_orig)))
nrow(hdi_orig)
hdi=hdi_orig[-c((nrow(hdi_orig)-10):nrow(hdi_orig)),]
tail(hdi)
dim(hdi)
#võime ka kohe ala ette anda
hdi=read_excel("data/HDIdat.xls.xlsx", range = "HDIdat!A20:Y218")
dim(hdi)
head(hdi)
tail(hdi)
terms=read_excel('https://evs.nci.nih.gov/ftp1/CDISC/SDTM/SDTM%20Terminology.xls')
str(states)
url='https://evs.nci.nih.gov/ftp1/CDISC/SDTM/SDTM%20Terminology.xls'
#tõmbab faili alla, teeb ajutise faili, leob sisse
GET(url, write_disk(tf <- tempfile(fileext = ".xls")))
library(httr)
url='https://evs.nci.nih.gov/ftp1/CDISC/SDTM/SDTM%20Terminology.xls'
#tõmbab faili alla, teeb ajutise faili, leob sisse
GET(url, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
library(httr)
url='https://evs.nci.nih.gov/ftp1/CDISC/SDTM/SDTM%20Terminology.xls'
#tõmbab faili alla, teeb ajutise faili, leob sisse
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
df <- read_excel(tf, 2L)
save('data/hdi.RData)
save(hdi, 'data/hdi.RData)
save(hdi, 'data/hdi.RData')
saveRDS(hdi, file = "data/hdi.rds")
hdi2=readRDS(file = "data/hdi.rds")
hdi2=readRDS(file = "data/hdi.rds")
compare(hdi, hdi2)
hdi2=readRDS(file = "data/hdi.rds")
all(hdi == hdi2)
hdi2=readRDS(file = "data/hdi.rds")
all(hdi == hdi2)
identical(hdi,hdi2)
library("openxlsx")
install.packages("openxlsx")
library("openxlsx")
library("openxlsx")
write.xlsx(hdi, file = "data/hdi_example.xlsx", colNames = TRUE, borders = "columns")
write.csv(hdi, file="data/hdi_example.csv", )
us_state_populations_import<-read_csv("data/introductory_state_example.csv")
us_state_populations_import<-read.csv("data/introductory_state_example.csv")
head(us_state_populations_import)
str(us_state_populations_import)
summry(us_state_populations_import)
summary(us_state_populations_import)
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
us_state_populations<-read.csv("data/introductory_state_example.csv")
head(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
dim(us_state_populations)
library(tidyverse)
df_californi_ny<-us_state_populations %>%
filter(state %in% c("California", "New York"))
dim(df_californi_ny)
head(df_californi_ny)
?group_by
df_california_ny=us_state_populations[us_state_populations$state %in%  c("California", "New York")]
df_california_ny=us_state_populations[us_state_populations$state %in%  c("California", "New York"),]
df_california_ny_grouped=group_by(df_california_ny, c("year"))
mean(df_california_ny_grouped)
mean(df_californi_ny, "population")
summarise(df_california_ny_grouped,"population")
df_california_ny=us_state_populations[us_state_populations$state %in%  c("California", "New York"),]
df_california_ny_grouped=group_by(df_california_ny, c("year"))
summarise(df_california_ny_grouped,"population")
df_california_ny=us_state_populations[us_state_populations$state %in%  c("California", "New York"),]
df_california_ny_grouped=group_by(df_california_ny, c("year"))
summarise(mean(df_california_ny_grouped,"population"))
?summarise
df_california_ny=us_state_populations[us_state_populations$state %in%  c("California", "New York"),]
df_california_ny_grouped=group_by(df_california_ny, c("year"))
summarise(df_california_ny_grouped, mean=mean(population))
us_state_populations<-read.csv("data/introductory_state_example.csv")
head(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
dim(us_state_populations)
library(tidyverse)
df_california_ny<-us_state_populations %>%
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
df_california_ny=us_state_populations[us_state_populations$state %in%  c("California", "New York"),]
df_california_ny_grouped=group_by(df_california_ny, c("year"))
summarise(df_california_ny_grouped, mean=mean(population))
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by("state")%>%
mean(population)
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by("state")%>%
summarise(mean=mean(population))
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by(state)%>%
summarise(mean=mean(population))
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by(state)%>%
summarise(mean=mean(population, na.rm=T), sd)
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by(state)%>%
summarise(mean=mean(population, na.rm=T), sd=sd(population))
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by(state)%>%
summarise(mean=mean(population), sd=sd(population))
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))%>%
group_by(state)%>%
summarise(mean=mean(population), sandardhälve=sd(population))
us_state_populations %>%
select(state, population) %>%
glimpse()
View(us_state_populations)
us_state_populations %>%
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population = populatsioon, year = aasta) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations %>%
select(state, population) %>%
filter(year>1950)%>%
glimpse()
View(us_state_populations)
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations$year
unique(us_state_populations$year)
us_state_populations %>%
select(state, population) %>%
filter(year>1900)%>%
glimpse()
View(us_state_populations_import)
us_state_populations %>%
select(year, population) %>%
filter(year>1900)%>%
glimpse()
us_state_populations %>%
mutate(population_thousand=population/1000) %>%
head()
us_state_populations<-us_state_populations %>%
#mutate loob uue muutuja
mutate(population_thousand=population/1000) %>%
head()
us_state_populations<-read.csv("data/introductory_state_example.csv")
head(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
dim(us_state_populations)
library(tidyverse)
#tulemus omistatakse muutujale df_california_ny, aluseks võtame andmed
#muutujast us_state_populations
df_california_ny<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
#grupeerime osariigi järgi
group_by(state)%>%
#arvutame iga grupi kohta keskmise ja st. hälve
summarise(mean=mean(population), sandardhälve=sd(population))
#populatsioon alates aastast 1900
us_state_populations %>%
select(year, population) %>%
filter(year>=1900)%>%
glimpse()
#populatsioon kogu perioodi kohta
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations %>%
#otsib veerge mis sisaldavad mustrit "pop" ja lõppevad tähtedega "ion"
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations<-us_state_populations %>%
#mutate loob uue muutuja
mutate(population_thousand=population/1000)
head(us_state_populations)
us_state_populations<-read.csv("data/introductory_state_example.csv")
head(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
dim(us_state_populations)
library(tidyverse)
#tulemus omistatakse muutujale df_california_ny, aluseks võtame andmed
#muutujast us_state_populations
df_california_ny<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
#grupeerime osariigi järgi
group_by(state)%>%
#arvutame iga grupi kohta keskmise ja st. hälve
summarise(mean=mean(population), sandardhälve=sd(population))
#populatsioon alates aastast 1900
us_state_populations %>%
select(year, population) %>%
filter(year>=1900)%>%
glimpse()
#populatsioon kogu perioodi kohta
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations %>%
#otsib veerge mis sisaldavad mustrit "pop" ja lõppevad tähtedega "ion"
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations<-us_state_populations %>%
#mutate loob uue muutuja
mutate(population_thousand=population/1000)
head(us_state_populations)
us_state_populations<-read.csv("data/introductory_state_example.csv")
head(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
dim(us_state_populations)
library(tidyverse)
#tulemus omistatakse muutujale df_california_ny, aluseks võtame andmed
#muutujast us_state_populations
df_california_ny<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vekto  ris c(...)
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
#grupeerime osariigi järgi
group_by(state)%>%
#arvutame iga grupi kohta keskmise ja st. hälve
summarise(mean=mean(population), sandardhälve=sd(population))
#populatsioon alates aastast 1900
us_state_populations %>%
select(year, population) %>%
filter(year>=1900)%>%
glimpse()
#populatsioon kogu perioodi kohta
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations %>%
#otsib veerge mis sisaldavad mustrit "pop" ja lõppevad tähtedega "ion"
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations<-us_state_populations %>%
#mutate loob uue muutuja
mutate(population_thousand=population/1000)
head(us_state_populations)
us_state_populations$state=replace(" ", "_", us_state_populations$state)
us_state_populations$state=gsub(" ", "_", us_state_populations$state)
head(us_state_populations)
#teeme väiketähtdeks
us_state_populations$state=tolower(us_state_populations$state)
head(us_state_populations)
cut(us_state_populations$year,
c(min(us_state_populations$year),1914,1940, 1950))
cut(us_state_populations$year,                                  c(min(us_state_populations$year),1914,1940, 1950, max(us_state_populations$year))
cut(us_state_populations$year,                                  c(min(us_state_populations$year),1914,1940, 1950, max(us_state_populations$year)))
cut(us_state_populations$year,
seq(min(us_state_populations$year),
max(us_state_populations$year)))
cut(us_state_populations$year,
seq(min(us_state_populations$year),
max(us_state_populations$year),5))
cut(us_state_populations$year,
seq(min(us_state_populations$year)-1,
max(us_state_populations$year),5))
cut(us_state_populations$year,
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+1,5))
cut(us_state_populations$year,
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+1,5))
us_state_populations$period<-cut(us_state_populations$year,
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+1,5))
table(us_state_populations$year, us_state_populations$period)
head(table(us_state_populations$year, us_state_populations$period))
table(us_state_populations$year, us_state_populations$period)[:5,:5]
table(us_state_populations$year, us_state_populations$period)[1:5,1:5]
#kontrollime, kas iga aasta kohta on üks intervall
table(us_state_populations$year, us_state_populations$period)[1:5,1:6]
colSums(is.na(us_state_populations))
#mis real puuduvad väärtused on?
us_state_populations[is.na(us_state_populations$period)]
#mis real puuduvad väärtused on?
us_state_populations[is.na(us_state_populations$period),]
#mis real puuduvad väärtused on?
us_state_populations[is.na(us_state_populations$period),]$year
df_landdate=read.csv(('data/landdata-states.csv))
head(df_landdate)
df_landdata=read.csv(('data/landdata-states.csv'))
df_landdata=read.csv(('data\landdata-states.csv'))
df_landdata=read.csv(('data/landdata-states.csv'))
head(df_landdata)
head(df_states)
df_states=read_csv('data/states.csv')
head(df_states)
unique(df_states$state)
unique(us_state_populations$state)
us_state_populations$state=gsub(" ", "_", us_state_populations$state)
us_state_populations$state=tolower(us_state_populations$state)
unique(us_state_populations$state)
df_states$state=gsub(" ", "_", df_states$state)
df_states$state=tolower(df_states$state)
unique(df_states$state)
?merge
df=merge(us_state_populations, df_states,by.y='state', by.y='state')
df=merge(us_state_populations, df_states,by.x='state', by.y='state')
df.head()
head(df)
us_state_populations %>%
group_by(year) %>%
summarise(unique_states=length(unique(states)))
