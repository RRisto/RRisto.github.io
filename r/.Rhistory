boolean1|boolean3
#loogiline või, sisuliselt sama, mis eelmine, erisuse kohta loe:
#https://stat.ethz.ch/R-manual/R-devel/library/base/html/Logic.html
boolean1||boolean2
boolean1||boolean3
#testi kas on tõene
isTRUE(boolean1)
isTRUE(boolean3)
#vektoriga oleme juba tuttavad, vektoriga saab teha tehteid
vec1=c(1,2,3,4)
vec2=c(10, 10,10,10)
vec3=c(20)
vec4=c(10,20)
vec5=c(10,20, 30)
vec1+vec2
vec1+vec3
vec1+vec4
vec1+vec5
vec1=c(TRUE,FALSE, TRUE)
vec2=c(FALSE,FALSE, TRUE)
vec1+vec2
vec1=c("tere", "halloo")
vec2=c("maja", "auto")
vec=c(1,2, "auto", TRUE)
#indeksiga
vec[1]
#vahemiku indeks
vec[1:length(vec)]
vec[1:2]
#vektor indeksitest
vec[c(1,3)]
#miinus näitab indeksit, mida me ei taha
vec[-1]
vec[-c(1,3)]
#andmeraami võib vaadelda kui vektorite kogumit, kus read ja veerud koosnevad vektoritest
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(d,e,f)
names(mydata) <- c("ID","Color","Passed") # variable names
mydata
mydata[1:2] # veerud 3,4,5
mydata[c("ID","Color")] # veerud ID ja Color
mydata$Passed # muutuja Passed
mydata[1,2] #rida 1, veerg2
mydata[c(1,2), c(2,3)]#read 1 ja 2 ning veerud 2 ja 3
mydata[1:2, 2:3]
#veergude arv
ncol(mydata)
#ridade arv
nrow(mydata)
mydata
#väärtustame üle
mydata[2,3]<-"uus väärtus"
mydata
mydata['uus_veerg']<-c(25,10,20,30)
mydata
#rbind lisab andmeraami olemasolevale andmeraamile uute ridadena
#on olemas ka cbind mis teeb sama kuid lisab andmeraami veergudena
mydata<-rbind(mydata,(rep("uus", ncol(mydata))))
mydata
#eemaldame viimase rea
mydata <- mydata[-nrow(mydata),]
mydata
mydata[-1,]
mydata[ which(mydata$uus_veerg>10& mydata$Passed==TRUE), ]
mydata[ (mydata$uus_veerg>10& mydata$Passed==TRUE), c("Passed","Color")]
subset(mydata, uus_veerg>10| mydata$Passed==TRUE,select=c(Color, Passed))
subset(mydata, uus_veerg>10 & mydata$Passed==TRUE,select=c(Color, Passed))
newdata <- mydata[c(-3,-5)]
newdata
# geneb 5 x 4 matriksi
y<-matrix(1:20, nrow=5,ncol=4)
y
cells <- c(1,26,24,68)
rnames <- c("R1", "R2")
cnames <- c("C1", "C2")
mymatrix <- matrix(cells, nrow=2, ncol=2, byrow=TRUE,
dimnames=list(rnames, cnames))
mymatrix
y[,4] # 4. veerg
y[3,] # 3. rida
y[2:4,1:3] # read 2,3,4 veerud 1,2,3
#näide
w <- list(name="Fred", mynumbers=a, mymatrix=y, age=5.3)
w
# list mis koosneb kahest listist
v <- c(w,w)
v
v$name
v[["name"]]
v[1]
v[[1]]
v$mymatrix[1:2,3:4]
class(v)
class(mydata)
N = length(myData$time)
#hetkeaeg
t <- Sys.time()
t
class(t)
timeStamp <-  strftime(t,"%Y-%m-%d %H:%M:%S")
timeStamp
class(timeStamp)
myData <- data.frame(time=c("2014-01-23 14:28:21","2014-01-23 14:28:55",
"2014-01-23 14:29:02","2014-01-23 14:31:18"),
speed=c(2.0,2.2,3.4,5.5))
myData
summary(myData)
myData$time <- strptime(myData$time,"%Y-%m-%d %H:%M:%S")
N = length(myData$time)
myData$time[1] - myData$time[2]
N = length(myData$time)
myData$time[2] - myData$time[1]
head(us_state_populations)
# dplyr approach
us_state_populations %>%
select(state, year) %>%
arrange(state)
us_state_populations<-read.csv("data/introductory_state_example.csv")
#esimesed 6 rida andmetest
head(us_state_populations)
#viimased 6 rida andmetest
tail(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
#andmeraami dimensioonid
dim(us_state_populations)
library(tidyverse)
#tulemus omistatakse muutujale df_california_ny, aluseks võtame andmed
#muutujast us_state_populations
df_california_ny<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
df_california_ny_1900<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
filter(year>=1900)
dim(df_california_ny_1900)
head(df_california_ny_1900)
#populatsioon alates aastast 1900
us_state_populations %>%
#valime veerud year ja population
select(year, population) %>%
filter(year>=1900)%>%
glimpse()
#populatsioon kogu perioodi kohta
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations %>%
#otsib veerge mis sisaldavad mustrit "pop" ja lõppevad tähtedega "ion"
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
#grupeerime osariigi järgi
group_by(state)%>%
#arvutame iga grupi kohta keskmise ja st. hälve
summarise(keskmine=mean(population),mediaan=median(population), mood=mode(population),
sandardhälve=sd(population))
head(us_state_populations)
# dplyr approach
us_state_populations %>%
select(state, year) %>%
arrange(state)
#ilma tidyversita
us_state_populations[order(us_state_populations$state), c("state", "year")]
head(us_state_populations)
# dplyr approach
us_state_populations %>%
select(state, year) %>%
arrange(state)
us_state_populations %>%
select(state, year) %>%
arrange(desc(state))
#arvutame vaatluste arvu igas grupis
us_state_populations%>%
group_by(state)%>%
summarise(count=n())
#arvutame vaatluste arvu igas grupis
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(desc(count))
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(count)
#nüüd võime välja filtreerida osariigid, kus  on üle 20 vaatluse
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
filter(count>20)
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(count)%>%
head()
us_state_populations %>%
group_by(year) %>%
summarise(obs_count = n()) %>%
mutate(change = obs_count - lag(obs_count))%>%
head()
us_state_populations %>%
group_by(year) %>%
tally() %>%
mutate(change = n - lag(n))
us_state_populations %>%
group_by(year) %>%
tally() %>%
mutate(change = n - lag(n))%>%
head()
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year),5), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
seq(min(us_state_populations$year)-1,
max(us_state_populations$year),5)
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year),5), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+100,5), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
c(1900,2000),5), include.lowest = T)
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
c(1900,2000), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
c(0, 1900,2000, 2011), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
c(1790, 1900,2000, 2011), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
us_state_populations<-read.csv("data/introductory_state_example.csv")
#esimesed 6 rida andmetest
head(us_state_populations)
#viimased 6 rida andmetest
tail(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
#andmeraami dimensioonid
dim(us_state_populations)
library(tidyverse)
#tulemus omistatakse muutujale df_california_ny, aluseks võtame andmed
#muutujast us_state_populations
df_california_ny<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
df_california_ny_1900<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
filter(year>=1900)
dim(df_california_ny_1900)
head(df_california_ny_1900)
#populatsioon alates aastast 1900
us_state_populations %>%
#valime veerud year ja population
select(year, population) %>%
filter(year>=1900)%>%
glimpse()
#populatsioon kogu perioodi kohta
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations %>%
#otsib veerge mis sisaldavad mustrit "pop" ja lõppevad tähtedega "ion"
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
#grupeerime osariigi järgi
group_by(state)%>%
#arvutame iga grupi kohta keskmise ja st. hälve
summarise(keskmine=mean(population),mediaan=median(population), mood=mode(population),
sandardhälve=sd(population))
head(us_state_populations)
# dplyr approach
us_state_populations %>%
select(state, year) %>%
arrange(state)%>%
head()
us_state_populations %>%
select(state, year) %>%
arrange(desc(state))%>%
head()
#ilma tidyversita
head(us_state_populations[order(us_state_populations$state), c("state", "year")])
us_state_populations<-us_state_populations %>%
#mutate loob uue muutuja olemasolevate kõrvale
mutate(population_thousand=population/1000)
head(us_state_populations)
#asendame tühikud alakriipsuga
us_state_populations$state=gsub(" ", "_", us_state_populations$state)
#teeme väiketähtdeks
us_state_populations$state=tolower(us_state_populations$state)
head(us_state_populations)
#arvutame vaatluste arvu igas grupis
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
head()
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(count)%>%
head()
#nüüd võime välja filtreerida osariigid, kus  on üle 20 vaatluse
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
filter(count>20)
us_state_populations %>%
group_by(year) %>%
summarise(obs_count = n()) %>%
mutate(change = obs_count - lag(obs_count))%>%
head()
us_state_populations %>%
group_by(year) %>%
tally() %>%
mutate(change = n - lag(n))%>%
head()
#cut lõikab muutuja faktoriteks
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+2,5))
#vaatame
table(us_state_populations$year, us_state_populations$period)[1:5,1:6]
colSums(is.na(us_state_populations))
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
c(1790, 1900,2000, 2011), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year),5), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
us_state_populations<-read.csv("data/introductory_state_example.csv")
#esimesed 6 rida andmetest
head(us_state_populations)
#viimased 6 rida andmetest
tail(us_state_populations)
str(us_state_populations)
summary(us_state_populations)
#andmeraami dimensioonid
dim(us_state_populations)
library(tidyverse)
#tulemus omistatakse muutujale df_california_ny, aluseks võtame andmed
#muutujast us_state_populations
df_california_ny<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))
dim(df_california_ny)
head(df_california_ny)
df_california_ny_1900<-us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
filter(year>=1900)
dim(df_california_ny_1900)
head(df_california_ny_1900)
#populatsioon alates aastast 1900
us_state_populations %>%
#valime veerud year ja population
select(year, population) %>%
filter(year>=1900)%>%
glimpse()
#populatsioon kogu perioodi kohta
us_state_populations %>%
select(state, population) %>%
glimpse()
us_state_populations %>%
#otsib veerge mis sisaldavad mustrit "pop" ja lõppevad tähtedega "ion"
select(contains("pop"), ends_with("ion")) %>%
glimpse
us_state_populations %>%
rename(population=population, aasta = year, osariik=state) %>%
glimpse
us_state_populations %>%
#filtreerimne välja osariigid, millen nimed on alltoodud vektoris c(...)
filter(state %in% c("California", "New York"))%>%
#grupeerime osariigi järgi
group_by(state)%>%
#arvutame iga grupi kohta keskmise ja st. hälve
summarise(keskmine=mean(population),mediaan=median(population), mood=mode(population),
sandardhälve=sd(population))
head(us_state_populations)
# dplyr approach
us_state_populations %>%
select(state, year) %>%
arrange(state)%>%
head()
us_state_populations %>%
select(state, year) %>%
arrange(desc(state))%>%
head()
#ilma tidyversita
head(us_state_populations[order(us_state_populations$state), c("state", "year")])
us_state_populations<-us_state_populations %>%
#mutate loob uue muutuja olemasolevate kõrvale
mutate(population_thousand=population/1000)
head(us_state_populations)
#asendame tühikud alakriipsuga
us_state_populations$state=gsub(" ", "_", us_state_populations$state)
#teeme väiketähtdeks
us_state_populations$state=tolower(us_state_populations$state)
head(us_state_populations)
#arvutame vaatluste arvu igas grupis
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
head()
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(count)%>%
head()
#nüüd võime välja filtreerida osariigid, kus  on üle 20 vaatluse
us_state_populations%>%
group_by(state)%>%
summarise(count=n())%>%
arrange(desc(count))%>%
filter(count>20)
us_state_populations %>%
group_by(year) %>%
summarise(obs_count = n()) %>%
mutate(change = obs_count - lag(obs_count))%>%
head()
us_state_populations %>%
group_by(year) %>%
tally() %>%
mutate(change = n - lag(n))%>%
head()
#cut lõikab muutuja faktoriteks
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+2,5))
#vaatame
table(us_state_populations$year, us_state_populations$period)[1:5,1:6]
colSums(is.na(us_state_populations))
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+1,5), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
#mis aastatel puudub period väärtus?
us_state_populations[is.na(us_state_populations$period),]$year
#meie puhul on siin tegemist näpukaga.
us_state_populations$period<-cut(us_state_populations$year,
#seq genereerib annab kohad, mis jaotab pika intervalli väiksemateks
seq(min(us_state_populations$year)-1,
max(us_state_populations$year)+10,5), include.lowest = T)
us_state_populations[is.na(us_state_populations$period),]$year
